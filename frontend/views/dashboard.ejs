<!-- frontend/views/dashboard.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard - InfoComm Worldwide</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <!-- Animate.css for Animations -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
    <!-- Custom CSS -->
    <link rel="stylesheet" href="/css/styles.css">
    <style nonce="<%= nonce %>">
        /* Custom Styles */
        body {
            background-color: #f8f9fa;
        }
        .navbar-brand img {
            border-radius: 50%;
        }
        .header {
            padding: 60px 0;
            text-align: center;
            background-color: #ffffff;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 30px;
        }
        .header h1 {
            font-size: 2.5rem;
            font-weight: bold;
        }
        .header p {
            font-size: 1.1rem;
            color: #6c757d;
        }
        .repo-card {
            transition: transform 0.3s;
        }
        .repo-card:hover {
            transform: translateY(-5px);
        }
        .job-status {
            font-weight: bold;
        }
        .status-pending { color: #ffc107; }
        .status-in-progress { color: #17a2b8; }
        .status-completed { color: #28a745; }
        .status-failed { color: #dc3545; }
    </style>
</head>
<body>

    <!-- Include Navbar -->
    <%- include('partials/navbar') %>

    <!-- Main Content -->
    <section class="container mt-5 pt-5">
        <!-- Header -->
        <div class="header animate__animated animate__fadeInDown">
            <h1>Dashboard</h1>
            <p>Manage your repositories and initiate model fine-tuning jobs seamlessly.</p>
        </div>

        <!-- GitHub Repositories -->
        <div class="mb-5">
            <h3 class="mb-4"><i class="fab fa-github me-2"></i>Your GitHub Repositories</h3>
            <div class="row g-4">
                <% if (repos && repos.length > 0) { %>
                    <% repos.forEach(repo => { %>
                        <div class="col-md-4">
                            <div class="card repo-card shadow-sm">
                                <div class="card-body">
                                    <h5 class="card-title"><a href="<%= repo.html_url %>" target="_blank"><%= repo.name %></a></h5>
                                    <p class="card-text"><%= repo.description || 'No description provided.' %></p>
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span><i class="fas fa-star me-1"></i><%= repo.stargazers_count %></span>
                                        <span><i class="fas fa-code-branch me-1"></i><%= repo.forks_count %></span>
                                    </div>
                                </div>
                                <div class="card-footer text-center">
                                    <button class="btn btn-primary btn-sm fine-tune-btn" data-bs-toggle="modal" data-bs-target="#fineTuneModal" data-repourl="<%= repo.html_url %>">
                                        <i class="fas fa-cogs me-2"></i> Fine-Tune
                                    </button>                                    
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p>You have no repositories to display.</p>
                <% } %>
            </div>
        </div>

        <!-- Fine-Tuning Jobs -->
        <div class="mb-5">
            <h3 class="mb-4"><i class="fas fa-tasks me-2"></i>Your Fine-Tuning Jobs</h3>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Job ID</th>
                        <th scope="col">Repository</th>
                        <th scope="col">Model ID</th>
                        <th scope="col">Status</th>
                        <th scope="col">Result</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (jobs && jobs.length > 0) { %>
                        <% jobs.forEach(job => { %>
                            <tr>
                                <th scope="row">#<%= job.id %></th>
                                <td><a href="<%= job.repo_url %>" target="_blank"><%= job.repo_url %></a></td>
                                <td><%= job.model_id %></td>
                                <td id="job-<%= job.id %>" class="job-status status-<%= job.status.replace('-', '') %>">
                                    <%= job.status.charAt(0).toUpperCase() + job.status.slice(1) %>
                                </td>
                                <td>
                                    <% if (job.status === 'completed') { %>
                                        <a href="<%= job.result.download_url %>" class="btn btn-success btn-sm" target="_blank">
                                            <i class="fas fa-download me-1"></i> Download
                                        </a>
                                    <% } else if (job.status === 'failed') { %>
                                        <span class="text-danger">Error: <%= job.result %></span>
                                    <% } else { %>
                                        N/A
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    <% } else { %>
                        <tr>
                            <td colspan="5" class="text-center">No fine-tuning jobs found.</td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>

        <!-- Fine-Tune Modal -->
        <div class="modal fade" id="fineTuneModal" tabindex="-1" aria-labelledby="fineTuneModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form id="fineTuneForm">
                        <div class="modal-header">
                            <h5 class="modal-title" id="fineTuneModalLabel">Initiate Fine-Tuning Job</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <input type="hidden" id="repo_url" name="repo_url" value="">
                            <div class="mb-3">
                                <label for="model_id" class="form-label"><i class="fas fa-brain me-2"></i>Model ID</label>
                                <input type="text" class="form-control" id="model_id" name="model_id" placeholder="Enter the Model ID" required>
                            </div>
                            <div id="formAlert" class="alert d-none" role="alert"></div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">Start Fine-Tuning</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

    </section>

    <!-- Include Footer -->
    <%- include('partials/footer') %>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js" nonce="<%= nonce %>"></script>
    <!-- Axios for HTTP Requests -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js" nonce="<%= nonce %>"></script>
    <!-- Socket.io -->
    <script src="/socket.io/socket.io.js" nonce="<%= nonce %>"></script>
    <!-- Custom JS -->
    <script nonce="<%= nonce %>">
        document.addEventListener('DOMContentLoaded', function() {
            // Update current year in footer (if not already handled)
            const currentYearElement = document.getElementById('currentYear');
            if (currentYearElement) {
                currentYearElement.textContent = new Date().getFullYear();
            }

            // Function to set repository URL in the modal
            function setRepoUrl(repoUrl) {
                document.getElementById('repo_url').value = repoUrl;
                document.getElementById('model_id').value = '';
                const formAlert = document.getElementById('formAlert');
                formAlert.classList.add('d-none');
            }

            // Attach event listeners to Fine-Tune buttons after the page loads
            document.querySelectorAll('.fine-tune-btn').forEach((button) => {
                button.addEventListener('click', function() {
                    const repoUrl = this.dataset.repourl; // Access the repo URL stored in the data attribute
                    setRepoUrl(repoUrl);
                });
            });

            // Handle Fine-Tune Form Submission
            document.getElementById('fineTuneForm').addEventListener('submit', async function(e) {
                e.preventDefault();
                const repo_url = document.getElementById('repo_url').value;
                const model_id = document.getElementById('model_id').value.trim();
                const formAlert = document.getElementById('formAlert');

                if (!model_id) {
                    formAlert.classList.remove('d-none', 'alert-success');
                    formAlert.classList.add('alert-danger');
                    formAlert.textContent = 'Model ID is required.';
                    return;
                }

                try {
                    const response = await axios.post('/fine-tune', { repo_url, model_id });
                    formAlert.classList.remove('d-none', 'alert-danger');
                    formAlert.classList.add('alert-success');
                    formAlert.textContent = response.data.message || 'Fine-tuning job initiated successfully.';
                    // Optionally, close the modal after a delay
                    setTimeout(() => {
                        var fineTuneModal = bootstrap.Modal.getInstance(document.getElementById('fineTuneModal'));
                        fineTuneModal.hide();
                        formAlert.classList.add('d-none');
                    }, 1500);
                } catch (error) {
                    formAlert.classList.remove('d-none', 'alert-success');
                    formAlert.classList.add('alert-danger');
                    formAlert.textContent = error.response?.data?.message || 'An error occurred.';
                }
            });

            // Initialize Socket.io
            const socket = io();
            console.log('Socket.io client initialized.');

            // Join the user's personal room
            socket.emit('join-room', '<%= userId %>');
            console.log('Emitted join-room event with userId:', '<%= userId %>');

            // Listen for job completion
            socket.on('fine-tuning-completed', (data) => {
                console.log('Received fine-tuning-completed event:', data);
                const jobElement = document.getElementById(`job-${data.jobId}`);
                if (jobElement) {
                    jobElement.textContent = 'Completed';
                    jobElement.classList.remove('status-pending', 'status-in-progress', 'status-failed');
                    jobElement.classList.add('status-completed');
                }
                alert(`Job ${data.jobId} has been completed successfully.`);
            });

            // Listen for job failure
            socket.on('fine-tuning-failed', (data) => {
                console.log('Received fine-tuning-failed event:', data);
                const jobElement = document.getElementById(`job-${data.jobId}`);
                if (jobElement) {
                    jobElement.textContent = 'Failed';
                    jobElement.classList.remove('status-pending', 'status-in-progress', 'status-completed');
                    jobElement.classList.add('status-failed');
                }
                alert(`Job ${data.jobId} has failed. Please try again.`);
            });

            // Handle Socket.io connection errors
            socket.on('connect_error', (err) => {
                console.error('Socket.io connection error:', err.message);
            });
        }); // Ensure proper closure of the DOMContentLoaded event
    </script>
</body>
</html>
